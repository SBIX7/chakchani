// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SNRT.Infrastructure.Persistence;

#nullable disable

namespace SNRT.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250902125125_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("SNRT.Domain.Users.LoginLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("SNRT.Domain.Users.TitleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TitleItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c7bb5cd-1fe1-4758-b37d-8d17f81dca41"),
                            Title = "Title 1"
                        },
                        new
                        {
                            Id = new Guid("a408e591-d18c-457a-aa69-77bc20e7ed58"),
                            Title = "Title 2"
                        },
                        new
                        {
                            Id = new Guid("3149a6a8-7996-4521-aef8-d245d96b5e69"),
                            Title = "Title 3"
                        },
                        new
                        {
                            Id = new Guid("60139737-d9db-4459-8282-59b2ab2b9b14"),
                            Title = "Title 4"
                        },
                        new
                        {
                            Id = new Guid("589bd436-7cf6-4207-90b2-090fba805646"),
                            Title = "Title 5"
                        },
                        new
                        {
                            Id = new Guid("0cdcb930-144e-459b-83c5-e35c2b5f1c62"),
                            Title = "Title 6"
                        },
                        new
                        {
                            Id = new Guid("7a3ab926-3976-4492-ad72-3b82e16c26a7"),
                            Title = "Title 7"
                        },
                        new
                        {
                            Id = new Guid("df1bb89d-7031-4ba4-9ccd-1368c4599f40"),
                            Title = "Title 8"
                        },
                        new
                        {
                            Id = new Guid("24a22e2b-6a09-42f2-a5d3-5e9ceb929de7"),
                            Title = "Title 9"
                        },
                        new
                        {
                            Id = new Guid("871da67f-76a4-4ef6-b7db-3ae9fd384676"),
                            Title = "Title 10"
                        },
                        new
                        {
                            Id = new Guid("62200d0b-c1cb-46af-a472-5d25ecc17faf"),
                            Title = "Title 11"
                        });
                });

            modelBuilder.Entity("SNRT.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SNRT.Domain.Users.UserTitleOrder", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TitleItemId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "TitleItemId");

                    b.HasIndex("TitleItemId");

                    b.ToTable("UserTitleOrders");
                });

            modelBuilder.Entity("SNRT.Domain.Users.LoginLog", b =>
                {
                    b.HasOne("SNRT.Domain.Users.User", "User")
                        .WithMany("LoginLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SNRT.Domain.Users.UserTitleOrder", b =>
                {
                    b.HasOne("SNRT.Domain.Users.TitleItem", "TitleItem")
                        .WithMany()
                        .HasForeignKey("TitleItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SNRT.Domain.Users.User", "User")
                        .WithMany("TitleOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TitleItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SNRT.Domain.Users.User", b =>
                {
                    b.Navigation("LoginLogs");

                    b.Navigation("TitleOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
